// https://codepen.io/mroverdoz/pen/BGyXOJ
// https://codepen.io/markmead/pen/xyKNqw

.btns {
  cursor: pointer;
}

.buttons1 {
  padding: 20px;
  cursor: pointer;
  @keyframes pulse {
    0% {
      transform: scale(0);
      opacity: 0;
    }
    33% {
      transform: scale(1);
      opacity: 1;
    }
    100% {
      transform: scale(3);
      opacity: 0;
    }
  }

  .button {
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    background: #c06c84;
    box-shadow: 0 3px 2px 0 rgba(0, 0, 0, 0.1);
    border-radius: 5px;
    height: 45px;
    padding: 0 30px;
    color: #fff;
    font-family: Lato, Arial, sans-serif;
    text-transform: uppercase;
    text-decoration: none;
    transition: background 0.3s, transform 0.3s, box-shadow 0.3s;
    will-change: transform;

    &:hover {
      cursor: pointer;
      background: darken(#c06c84, 10%);
      box-shadow: 0 4px 17px rgba(0, 0, 0, 0.2);
      transform: translate3d(0, -2px, 0);
    }
    &:active {
      cursor: pointer;
      box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.1);
      transform: translate3d(0, 1px, 0);
    }
  }

  .pulse {
    position: relative;
    cursor: pointer;

    &:before,
    &:after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(255, 255, 255, 0.4);
      border-radius: 50%;
      width: 20px;
      height: 20px;
      opacity: 0;
      margin: auto;
      padding: 0;
    }
    &:before {
      animation: pulse 1.5s infinite linear;
    }
    &:after {
      animation: pulse 2s 0.4s infinite linear;
    }
    &:hover:before,
    &:hover:after {
      display: none;
    }
  }
}

.buttons2 {
  padding: 20px;
  cursor: pointer;
  a {
    padding: 1rem 2rem;
    padding: 10px 20px;
    font-size: 1.25rem;
    position: relative;
    border: 2px solid black;
    border-width: 3px;
    border-style: solid;
    border-image-source: linear-gradient(to left, #743ad5, #d53a9d);
    border-radius: 10px;
    color: black;
    background-color: transparent;
    text-align: center;
  }

  .swap {
    span {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      padding: 1rem 2rem;
      padding: 10px 20px;
      box-sizing: border-box;
      opacity: 0;
      color: white;
      transition: 0.35s ease;
    }

    &::before {
      content: "";
      left: 0;
      top: 0;
      position: absolute;
      width: 0%;
      height: 100%;
      background-color: black;
      background: linear-gradient(45deg, red, blue);
      border-radius: 10px;
      transition: 0.5s ease;
    }

    &:hover {
      &:before {
        width: 100%;
      }

      span {
        opacity: 1;
      }
    }
  }
}

.buttons3 {
  cursor: pointer;
  svg {
    height: 3em;
    width: 3em;
    cursor: pointer;
  }

  .switching {
    position: absolute;
    top: 10%;
    right: 15%;
    left: 85%;
  }
}

.buttons5 {
  @mixin btn-border-drawing(
    $color: rgb(35, 220, 245),
    $hover: black,
    $width: 2px,
    $vertical: top,
    $horizontal: left,
    $duration: 0.25s
  ) {
    box-shadow: inset 0 0 0 $width $color;
    color: $color;
    transition: color $duration $duration/3;
    position: relative;

    &::before,
    &::after {
      border: 0 solid transparent;
      box-sizing: border-box;
      content: "";
      pointer-events: none;
      position: absolute;
      width: 0;
      height: 0;

      #{$vertical}: 0;
      #{$horizontal}: 0;
    }

    &::before {
      $h-side: if($horizontal == "left", "right", "left");

      border-#{$vertical}-width: $width;
      border-#{$h-side}-width: $width;
    }

    &::after {
      $v-side: if($vertical == "top", "bottom", "top");
      border-#{$v-side}-width: $width;
      border-#{$horizontal}-width: $width;
    }

    &:hover {
      color: $hover;

      &::before,
      &::after {
        border-color: $hover;
        transition: border-color 0s, width $duration, height $duration;
        width: 100%;
        height: 100%;
      }

      &::before {
        transition-delay: 0s, 0s, $duration;
      }

      &::after {
        transition-delay: 0s, $duration, 0s;
      }
    }
  }

  .draw-border {
    @include btn-border-drawing(#db11ca, #0ba2dd, 4px, bottom, right);
  }

  //=== Button styling, semi-ignore
  .btn {
    background: none;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    line-height: 1.5;
    font: 700 1.2rem "Roboto Slab", sans-serif;
    padding: 1em 2em;
    letter-spacing: 0.05rem;

    &:focus {
      outline: 2px dotted #55d7dc;
    }
  }
}

.alert {
  background-color: #a12a34;
  color: red;
}
